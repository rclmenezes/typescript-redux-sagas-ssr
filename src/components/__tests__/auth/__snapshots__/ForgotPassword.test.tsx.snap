// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test ForgotPassword Submit successfully 1`] = `
<ForgotPasswordPage
  forgotPasswordSubmit={[MockFunction]}
  routing={
    Object {
      "history": Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 2,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "",
          "pathname": "",
          "search": "",
          "state": Object {},
        },
        "push": [Function],
        "replace": [Function],
      },
      "location": Object {
        "hash": "",
        "key": "",
        "pathname": "",
        "search": "",
        "state": Object {},
      },
      "match": Object {
        "isExact": true,
        "params": Object {},
        "path": "",
        "url": "",
      },
      "staticContext": Object {
        "status": 200,
      },
    }
  }
  showConfirmation={false}
  user={null}
>
  <BaseAuthPage
    title="Forgot Your Password?"
  >
    <Container
      text={true}
    >
      <div
        className="ui text container"
      >
        <Header
          as="h1"
          textAlign="center"
        >
          <h1
            className="ui center aligned header"
          >
            Forgot Your Password?
          </h1>
        </Header>
        <WithFormik(InnerForgotPasswordForm)
          forgotPasswordSubmit={[MockFunction]}
          routing={
            Object {
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 2,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "",
                  "pathname": "",
                  "search": "",
                  "state": Object {},
                },
                "push": [Function],
                "replace": [Function],
              },
              "location": Object {
                "hash": "",
                "key": "",
                "pathname": "",
                "search": "",
                "state": Object {},
              },
              "match": Object {
                "isExact": true,
                "params": Object {},
                "path": "",
                "url": "",
              },
              "staticContext": Object {
                "status": 200,
              },
            }
          }
          showConfirmation={false}
          user={null}
        >
          <Formik
            enableReinitialize={false}
            forgotPasswordSubmit={[MockFunction]}
            handleSubmit={[Function]}
            initialValues={
              Object {
                "email": "",
              }
            }
            isInitialValid={false}
            onSubmit={[Function]}
            render={[Function]}
            routing={
              Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 2,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "",
                    "pathname": "",
                    "search": "",
                    "state": Object {},
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "location": Object {
                  "hash": "",
                  "key": "",
                  "pathname": "",
                  "search": "",
                  "state": Object {},
                },
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "",
                  "url": "",
                },
                "staticContext": Object {
                  "status": 200,
                },
              }
            }
            showConfirmation={false}
            user={null}
            validateOnBlur={true}
            validateOnChange={true}
            validationSchema={[Function]}
          >
            <InnerForgotPasswordForm
              dirty={false}
              errors={Object {}}
              forgotPasswordSubmit={[MockFunction]}
              handleBlur={[Function]}
              handleChange={[Function]}
              handleReset={[Function]}
              handleSubmit={[Function]}
              initialValues={
                Object {
                  "email": "",
                }
              }
              isSubmitting={false}
              isValid={false}
              isValidating={false}
              registerField={[Function]}
              resetForm={[Function]}
              routing={
                Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 2,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "",
                      "pathname": "",
                      "search": "",
                      "state": Object {},
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "key": "",
                    "pathname": "",
                    "search": "",
                    "state": Object {},
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "",
                    "url": "",
                  },
                  "staticContext": Object {
                    "status": 200,
                  },
                }
              }
              setError={[Function]}
              setErrors={[Function]}
              setFieldError={[Function]}
              setFieldTouched={[Function]}
              setFieldValue={[Function]}
              setFormikState={[Function]}
              setStatus={[Function]}
              setSubmitting={[Function]}
              setTouched={[Function]}
              setValues={[Function]}
              showConfirmation={false}
              submitCount={0}
              submitForm={[Function]}
              touched={Object {}}
              unregisterField={[Function]}
              user={null}
              validateField={[Function]}
              validateForm={[Function]}
              validateOnBlur={true}
              validateOnChange={true}
              values={
                Object {
                  "email": "",
                }
              }
            >
              <Form>
                <Component
                  formik={
                    Object {
                      "dirty": false,
                      "errors": Object {},
                      "handleBlur": [Function],
                      "handleChange": [Function],
                      "handleReset": [Function],
                      "handleSubmit": [Function],
                      "initialValues": Object {
                        "email": "",
                      },
                      "isSubmitting": false,
                      "isValid": false,
                      "isValidating": false,
                      "registerField": [Function],
                      "resetForm": [Function],
                      "setError": [Function],
                      "setErrors": [Function],
                      "setFieldError": [Function],
                      "setFieldTouched": [Function],
                      "setFieldValue": [Function],
                      "setFormikState": [Function],
                      "setStatus": [Function],
                      "setSubmitting": [Function],
                      "setTouched": [Function],
                      "setValues": [Function],
                      "submitCount": 0,
                      "submitForm": [Function],
                      "touched": Object {},
                      "unregisterField": [Function],
                      "validate": undefined,
                      "validateField": [Function],
                      "validateForm": [Function],
                      "validateOnBlur": true,
                      "validateOnChange": true,
                      "validationSchema": [Function],
                      "values": Object {
                        "email": "",
                      },
                    }
                  }
                >
                  <form
                    onReset={[Function]}
                    onSubmit={[Function]}
                  >
                    <FormikConnect(FieldInner)
                      component={[Function]}
                      fluid={true}
                      name="email"
                      placeholder="Email"
                    >
                      <FieldInner
                        component={[Function]}
                        fluid={true}
                        formik={
                          Object {
                            "dirty": false,
                            "errors": Object {},
                            "handleBlur": [Function],
                            "handleChange": [Function],
                            "handleReset": [Function],
                            "handleSubmit": [Function],
                            "initialValues": Object {
                              "email": "",
                            },
                            "isSubmitting": false,
                            "isValid": false,
                            "isValidating": false,
                            "registerField": [Function],
                            "resetForm": [Function],
                            "setError": [Function],
                            "setErrors": [Function],
                            "setFieldError": [Function],
                            "setFieldTouched": [Function],
                            "setFieldValue": [Function],
                            "setFormikState": [Function],
                            "setStatus": [Function],
                            "setSubmitting": [Function],
                            "setTouched": [Function],
                            "setValues": [Function],
                            "submitCount": 0,
                            "submitForm": [Function],
                            "touched": Object {},
                            "unregisterField": [Function],
                            "validate": undefined,
                            "validateField": [Function],
                            "validateForm": [Function],
                            "validateOnBlur": true,
                            "validateOnChange": true,
                            "validationSchema": [Function],
                            "values": Object {
                              "email": "",
                            },
                          }
                        }
                        name="email"
                        placeholder="Email"
                      >
                        <InputField
                          field={
                            Object {
                              "name": "email",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "value": "",
                            }
                          }
                          fluid={true}
                          form={
                            Object {
                              "dirty": false,
                              "errors": Object {},
                              "handleBlur": [Function],
                              "handleChange": [Function],
                              "handleReset": [Function],
                              "handleSubmit": [Function],
                              "initialValues": Object {
                                "email": "",
                              },
                              "isSubmitting": false,
                              "isValid": false,
                              "isValidating": false,
                              "registerField": [Function],
                              "resetForm": [Function],
                              "setError": [Function],
                              "setErrors": [Function],
                              "setFieldError": [Function],
                              "setFieldTouched": [Function],
                              "setFieldValue": [Function],
                              "setFormikState": [Function],
                              "setStatus": [Function],
                              "setSubmitting": [Function],
                              "setTouched": [Function],
                              "setValues": [Function],
                              "submitCount": 0,
                              "submitForm": [Function],
                              "touched": Object {},
                              "unregisterField": [Function],
                              "validateField": [Function],
                              "validateForm": [Function],
                              "validateOnBlur": true,
                              "validateOnChange": true,
                              "values": Object {
                                "email": "",
                              },
                            }
                          }
                          placeholder="Email"
                        >
                          <div
                            className="f1urtfz"
                          >
                            <Input
                              fluid={true}
                              name="email"
                              onBlur={[Function]}
                              onChange={[Function]}
                              placeholder="Email"
                              type="text"
                              value=""
                            >
                              <div
                                className="ui fluid input"
                              >
                                <input
                                  name="email"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  placeholder="Email"
                                  type="text"
                                  value=""
                                />
                              </div>
                            </Input>
                          </div>
                        </InputField>
                      </FieldInner>
                    </FormikConnect(FieldInner)>
                    <Button
                      as="button"
                      fluid={true}
                      primary={true}
                      type="submit"
                    >
                      <button
                        className="ui fluid primary button"
                        onClick={[Function]}
                        type="submit"
                      >
                        Submit
                      </button>
                    </Button>
                    <Message
                      className="fsuivmx"
                    >
                      <div
                        className="ui message fsuivmx"
                      >
                        <Link
                          replace={false}
                          to="/sign-up"
                        >
                          <a
                            href="/sign-up"
                            onClick={[Function]}
                          >
                            Create an account
                          </a>
                        </Link>
                      </div>
                    </Message>
                  </form>
                </Component>
              </Form>
            </InnerForgotPasswordForm>
          </Formik>
        </WithFormik(InnerForgotPasswordForm)>
      </div>
    </Container>
  </BaseAuthPage>
</ForgotPasswordPage>
`;
