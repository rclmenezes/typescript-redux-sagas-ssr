// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test ResetPassword Expired token 1`] = `
<BaseAuthPage
  title="Expired URL"
>
  <Container
    text={true}
  >
    <div
      className="ui text container"
    >
      <Header
        as="h1"
        textAlign="center"
      >
        <h1
          className="ui center aligned header"
        >
          Expired URL
        </h1>
      </Header>
      <Message
        className="fsuivmx"
      >
        <div
          className="ui message fsuivmx"
        >
          This URL is expired. 
          <Link
            replace={false}
            to="/forgot-password"
          >
            <a
              href="/forgot-password"
              onClick={[Function]}
            >
              Please go here
            </a>
          </Link>
           to submit another password request.
        </div>
      </Message>
    </div>
  </Container>
</BaseAuthPage>
`;

exports[`Test ResetPassword Invalid token 1`] = `
<BaseAuthPage
  title="Invalid URL"
>
  <Container
    text={true}
  >
    <div
      className="ui text container"
    >
      <Header
        as="h1"
        textAlign="center"
      >
        <h1
          className="ui center aligned header"
        >
          Invalid URL
        </h1>
      </Header>
      <Message
        className="fsuivmx"
      >
        <div
          className="ui message fsuivmx"
        >
          Something is wrong with this URL. If you need help resetting your password, contact support at 
          <a
            href="mailto:support@{BASE_URL}"
          >
            support@
            localhost:3000
          </a>
          .
        </div>
      </Message>
    </div>
  </Container>
</BaseAuthPage>
`;

exports[`Test ResetPassword Missing token 1`] = `
<BaseAuthPage
  title="Invalid URL"
>
  <Container
    text={true}
  >
    <div
      className="ui text container"
    >
      <Header
        as="h1"
        textAlign="center"
      >
        <h1
          className="ui center aligned header"
        >
          Invalid URL
        </h1>
      </Header>
      <Message
        className="fsuivmx"
      >
        <div
          className="ui message fsuivmx"
        >
          Something is wrong with this URL. If you need help resetting your password, contact support at 
          <a
            href="mailto:support@{BASE_URL}"
          >
            support@
            localhost:3000
          </a>
          .
        </div>
      </Message>
    </div>
  </Container>
</BaseAuthPage>
`;

exports[`Test ResetPassword Show confirmation 1`] = `
<BaseAuthPage
  title="Success!"
>
  <Container
    text={true}
  >
    <div
      className="ui text container"
    >
      <Header
        as="h1"
        textAlign="center"
      >
        <h1
          className="ui center aligned header"
        >
          Success!
        </h1>
      </Header>
      <Message
        className="fsuivmx"
      >
        <div
          className="ui message fsuivmx"
        >
          We've reset your password. Click 
          <Link
            replace={false}
            to="/"
          >
            <a
              href="/"
              onClick={[Function]}
            >
              here to go home.
            </a>
          </Link>
        </div>
      </Message>
    </div>
  </Container>
</BaseAuthPage>
`;

exports[`Test ResetPassword Successful submit 1`] = `
<Form>
  <Component
    formik={
      Object {
        "dirty": false,
        "errors": Object {},
        "handleBlur": [Function],
        "handleChange": [Function],
        "handleReset": [Function],
        "handleSubmit": [Function],
        "initialValues": Object {
          "password": "",
        },
        "isSubmitting": false,
        "isValid": false,
        "isValidating": false,
        "registerField": [Function],
        "resetForm": [Function],
        "setError": [Function],
        "setErrors": [Function],
        "setFieldError": [Function],
        "setFieldTouched": [Function],
        "setFieldValue": [Function],
        "setFormikState": [Function],
        "setStatus": [Function],
        "setSubmitting": [Function],
        "setTouched": [Function],
        "setValues": [Function],
        "submitCount": 0,
        "submitForm": [Function],
        "touched": Object {},
        "unregisterField": [Function],
        "validate": undefined,
        "validateField": [Function],
        "validateForm": [Function],
        "validateOnBlur": true,
        "validateOnChange": true,
        "validationSchema": [Function],
        "values": Object {
          "password": "",
        },
      }
    }
  >
    <form
      onReset={[Function]}
      onSubmit={[Function]}
    >
      <FormikConnect(FieldInner)
        component={[Function]}
        fluid={true}
        name="password"
        placeholder="New Password"
        type="password"
      >
        <FieldInner
          component={[Function]}
          fluid={true}
          formik={
            Object {
              "dirty": false,
              "errors": Object {},
              "handleBlur": [Function],
              "handleChange": [Function],
              "handleReset": [Function],
              "handleSubmit": [Function],
              "initialValues": Object {
                "password": "",
              },
              "isSubmitting": false,
              "isValid": false,
              "isValidating": false,
              "registerField": [Function],
              "resetForm": [Function],
              "setError": [Function],
              "setErrors": [Function],
              "setFieldError": [Function],
              "setFieldTouched": [Function],
              "setFieldValue": [Function],
              "setFormikState": [Function],
              "setStatus": [Function],
              "setSubmitting": [Function],
              "setTouched": [Function],
              "setValues": [Function],
              "submitCount": 0,
              "submitForm": [Function],
              "touched": Object {},
              "unregisterField": [Function],
              "validate": undefined,
              "validateField": [Function],
              "validateForm": [Function],
              "validateOnBlur": true,
              "validateOnChange": true,
              "validationSchema": [Function],
              "values": Object {
                "password": "",
              },
            }
          }
          name="password"
          placeholder="New Password"
          type="password"
        >
          <InputField
            field={
              Object {
                "name": "password",
                "onBlur": [Function],
                "onChange": [Function],
                "value": "",
              }
            }
            fluid={true}
            form={
              Object {
                "dirty": false,
                "errors": Object {},
                "handleBlur": [Function],
                "handleChange": [Function],
                "handleReset": [Function],
                "handleSubmit": [Function],
                "initialValues": Object {
                  "password": "",
                },
                "isSubmitting": false,
                "isValid": false,
                "isValidating": false,
                "registerField": [Function],
                "resetForm": [Function],
                "setError": [Function],
                "setErrors": [Function],
                "setFieldError": [Function],
                "setFieldTouched": [Function],
                "setFieldValue": [Function],
                "setFormikState": [Function],
                "setStatus": [Function],
                "setSubmitting": [Function],
                "setTouched": [Function],
                "setValues": [Function],
                "submitCount": 0,
                "submitForm": [Function],
                "touched": Object {},
                "unregisterField": [Function],
                "validateField": [Function],
                "validateForm": [Function],
                "validateOnBlur": true,
                "validateOnChange": true,
                "values": Object {
                  "password": "",
                },
              }
            }
            placeholder="New Password"
            type="password"
          >
            <div
              className="f1urtfz"
            >
              <Input
                fluid={true}
                name="password"
                onBlur={[Function]}
                onChange={[Function]}
                placeholder="New Password"
                type="password"
                value=""
              >
                <div
                  className="ui fluid input"
                >
                  <input
                    name="password"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="New Password"
                    type="password"
                    value=""
                  />
                </div>
              </Input>
            </div>
          </InputField>
        </FieldInner>
      </FormikConnect(FieldInner)>
      <Button
        as="button"
        fluid={true}
        primary={true}
        type="submit"
      >
        <button
          className="ui fluid primary button"
          onClick={[Function]}
          type="submit"
        >
          Submit
        </button>
      </Button>
      <Message
        className="fsuivmx"
      >
        <div
          className="ui message fsuivmx"
        >
          <Link
            replace={false}
            to="/sign-up"
          >
            <a
              href="/sign-up"
              onClick={[Function]}
            >
              Create an account
            </a>
          </Link>
        </div>
      </Message>
    </form>
  </Component>
</Form>
`;
